class Player
types
 	 public Cor = <Branco> | <Preto>;

instance variables
public cor: Cor;
public arqueiros : set of Arqueiro;

operations
	public Player: Cor * Posicao * Posicao * Posicao * Posicao * Posicao ==> Player
	Player(tipo,p1,p2,p3,p4,p5) == (
		if(tipo = <Branco>) then (
			dcl a1: Arqueiro := new Arqueiro(p1);
			dcl a2: Arqueiro := new Arqueiro(p2);
			dcl a3: Arqueiro := new Arqueiro(p3);
			dcl a4: Arqueiro := new Arqueiro(p4);
			dcl a5: Arqueiro := new Arqueiro(p5);
	
		arqueiros := {a1,a2,a3,a4,a5};
		cor := tipo;
		return self;
		)
		else if (tipo = <Preto>) then (
			dcl a1: Arqueiro := new Arqueiro(p1);
			dcl a2: Arqueiro := new Arqueiro(p2);
			dcl a3: Arqueiro := new Arqueiro(p3);
			dcl a4: Arqueiro := new Arqueiro(p4);
			dcl a5: Arqueiro := new Arqueiro(p5);
			

		arqueiros := {a1,a2,a3,a4,a5});
		cor := tipo;
		return self;
	);
	
	public contaPontos: () ==> nat
		contaPontos() == (
			dcl pontos: nat:=0;
			-- Se jogador branco entao valem 2 pontos os arqueiros que estiverem na posicao y=4
			if(cor = <Branco>) then (
				for all arqueiro in set arqueiros do (
				if (arqueiro.posicao.getY() = 4 and arqueiro.vivo = <True>) then
						pontos := pontos + 2
				else if(arqueiro.vivo = <True>) then
						pontos := pontos + 1;))
			-- Se jogador preto entao valem 2 pontos os arqueiros que estiverem na posicao y=0
			else (
				for all arqueiro in set arqueiros do (
				if (arqueiro.posicao.getY() = 0 and arqueiro.vivo = <True>) then
						pontos := pontos + 2
				else if (arqueiro.vivo = <True>) then
						pontos := pontos + 1;));
			return pontos;
		
		);
		
		-- mata arqueiro que esta na posicao pos
		public mataArqueiro: Posicao ==> ()
			mataArqueiro(pos) == (
				for all arq in set arqueiros do
					if(arq.posicao.getX() = pos.getX() and arq.posicao.getY() = pos.getY() and arq.posicao.ocupado = pos.ocupado) then (
						arq.matar();
						desocupaPos(arq);
						return)
			);
			
		-- marca arqueiro que esta na posicao pos	
			public marcaArqueiro: Posicao ==> ()
			marcaArqueiro(pos) == (
				for all arq in set arqueiros do
					if(arq.posicao.getX() = pos.getX() and arq.posicao.getY() = pos.getY() and arq.posicao.ocupado = pos.ocupado) then (
						arq.marcar();
						return)
			);
			
		-- retorna arqueiro por posicao
		public arqueiroPorPosicao: Posicao ==> Arqueiro
				arqueiroPorPosicao(pos) == (
						dcl p1: Posicao := new Posicao(0,0,0);
						dcl arqe: Arqueiro := new Arqueiro(p1);
						for all arq in set arqueiros do 
						if (arq.posicao.getX() = pos.getX() and arq.posicao.getY() = pos.getY()) then 
						(
						arqe.marcado := arq.marcado;
						arqe.vivo := arq.vivo;
						arqe.posicao.SetX(arq.posicao.getX());
						arqe.posicao.SetY(arq.posicao.getY());
						arqe.posicao.ocupado := arq.posicao.getOcupado();
						);
						return arqe;
				);
		
		-- retorna posiçao onde está um arqueiro		
		public posicaoPorArqueiro: Arqueiro ==> Posicao
				posicaoPorArqueiro(arq_in) == (
						dcl ret_pos: Posicao := new Posicao(0,0,0);
						for all arq in set arqueiros do 
						if (arq.vivo = arq_in.vivo 
						and arq.marcado = arq_in.marcado
						and arq.posicao.getX() = arq_in.posicao.getX()
						and arq.posicao.getY() = arq_in.posicao.getY()
						and arq.posicao.getOcupado() = arq_in.posicao.getOcupado()) then (
							ret_pos.SetX(arq.posicao.getX());
							ret_pos.SetY(arq.posicao.getY());
							ret_pos.ocupado := arq.posicao.getOcupado();
						);
						return ret_pos;
				);
				
		-- define set de arqueiros (para testes)
		public setArqueiros: set of Arqueiro ==> ()
			setArqueiros(arqs) == (
				arqueiros:=arqs;
			);
	
	
		-- desocupar posicao atraves de arqueiro
		public desocupaPos: Arqueiro ==> ()
				desocupaPos(arq) == (
				for all s in set arqueiros do (
					if (s.posicao.getX() = arq.posicao.getX() and s.posicao.getY() = arq.posicao.getY()) then
						s.posicao.desocupar();
		));
		
		-- ocupar posicao atraves de arqueiro
		public novaPos: Arqueiro * Posicao ==> ()
				novaPos(arq, pos_nova) == (
				for all s in set arqueiros do (
					if (s.posicao.getX() = arq.posicao.getX() 
					and s.posicao.getY() = arq.posicao.getY()
					and s.vivo = arq.vivo
					and s.marcado = arq.marcado) then (
						s.posicao.SetX(pos_nova.getX()); 
						s.posicao.SetY(pos_nova.getY());
					if(cor = <Branco>) then 
						s.posicao.ocuparEquipaBranco()
					else
						s.posicao.ocuparEquipaPreto())
					;
					
		));
		
		
		-- ocupar posicao com Arqueiro Branco
		public ocupaPosBranco: Arqueiro ==> ()
				ocupaPosBranco(arq) == (
				for all s in set arqueiros do (
					if (s = arq) then
						s.posicao.ocuparEquipaBranco();
		));
		
		-- ocupar posicao com Arqueiro Preto
		public ocupaPosPreto: Arqueiro ==> ()
				ocupaPosPreto(arq) == (
				for all s in set arqueiros do (
					if (s = arq) then
						s.posicao.ocuparEquipaPreto();
		));
		
			-- repor jogador morto
			--public reporArqueiroMorto : () ==> ()
				--reporArqueiroMorto() == (
				--	for all arqueiro in set arqueiros do (
				--		if(arqueiro.vivo = <False>) then ( 
							
				--		);
				--	);
				--);
			
			
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Player